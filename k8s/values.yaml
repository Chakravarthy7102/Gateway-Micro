# Default values for K8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
registry: chakravarthy712
image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

######################################
#                                    #
#      CART SERVICE  RELATED         #        
#                                    #
######################################
cart:
  replicaCount: 1
  image:
    name: cart
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1004 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: cart
  service:
    name: cart
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1004
        port: 1004



######################################
#                                    #
#      OFFERS SERVICE  RELATED       #        
#                                    #
######################################

offers:
  replicaCount: 1
  image:
    name: offers
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1001 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: offers
  service:
    name: offers
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1001
        port: 1001




######################################
#                                    #
#      EUREKA SERVICE  RELATED       #        
#                                    #
######################################

eureka:
  replicaCount: 1
  image:
    name: eureka
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 8761 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: eureka
  service:
    name: eureka
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 8761
        port: 8761

######################################
#                                    #
#      FRONTEND SERVICE  RELATED     #        
#                                    #
######################################


frontend:
  replicaCount: 1
  image:
    name: frontend
    tag: 1.0
    pullPolicy: Always
    ports:
      - containerPort: 8080 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: frontend
  service:
    name: frontend
    type: LoadBalancer
    ports:
      - protocol: TCP
        targetPort: 8080
        port: 8080

######################################
#                                    #
#      GATEWAY SERVICE  RELATED      #        
#                                    #
######################################


gateway:
  replicaCount: 1
  image:
    name: gateway
    tag: latest
    pullPolicy: Always
    ports:
      - containerPort: 9999 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: gateway
  service:
    name: gateway
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 9999
        port: 9999

######################################
#                                    #
#       SHOES SERVICE  RELATED       #        
#                                    #
######################################

shoes:
  replicaCount: 1
  image:
    name: shoes
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1002 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: shoes
  service:
    name: shoes
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1002
        port: 1002

######################################
#                                    #
#       WISHLIST SERVICE  RELATED    #        
#                                    #
######################################

wishlist:
  replicaCount: 1
  image:
    name: wishlist
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1003 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: wishlist
  service:
    name: wishlist
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1003
        port: 1003

######################################
#                                    #
#       INGRESS SERVICE  RELATED     #        
#                                    #
######################################

ingress:
  name: api-ingress
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  rules:
    - http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: frontend-service
              port:
                number: 8080