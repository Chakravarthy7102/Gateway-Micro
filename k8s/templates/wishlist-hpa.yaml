{{- if .Values.wishlist.autoscalar.isEnabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler

metadata:
  name: {{ .Values.wishlist.image.name }}-autoscalar

spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.wishlist.image.name }}
  minReplicas: {{ .Values.wishlist.autoscalar.minReplicas }}
  maxReplicas: {{ .Values.wishlist.autoscalar.maxReplicas }}
  metrics:
    {{- if .Values.wishlist.autoscalar.averageCPUUtilization }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.wishlist.autoscalar.averageCPUUtilization }}
    {{- end }}
    {{- if .Values.wishlist.autoscalar.averageMemoryUtilization }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.wishlist.autoscalar.averageMemoryUtilization }}
    {{- end }}
{{- end }}









######################################
#                                    #
#      CART SERVICE  RELATED         #        
#                                    #
######################################
cart:
  replicaCount: 1
  image:
    name: cart
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1004 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: cart
  service:
    name: cart
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1004
        port: 1004
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30





######################################
#                                    #
#      OFFERS SERVICE  RELATED       #        
#                                    #
######################################

offers:
  replicaCount: 1
  image:
    name: offers
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1001 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: offers
  service:
    name: offers
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1001
        port: 1001
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30




######################################
#                                    #
#      EUREKA SERVICE  RELATED       #        
#                                    #
######################################

eureka:
  replicaCount: 1
  image:
    name: eureka
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 8761 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: eureka
  service:
    name: eureka
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 8761
        port: 8761
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30

######################################
#                                    #
#      FRONTEND SERVICE  RELATED     #        
#                                    #
######################################


frontend:
  replicaCount: 1
  image:
    name: frontend
    tag: 1.0
    pullPolicy: Always
    ports:
      - containerPort: 8080 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: frontend
  service:
    name: frontend
    type: LoadBalancer
    ports:
      - protocol: TCP
        targetPort: 8080
        port: 8080
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30

######################################
#                                    #
#      GATEWAY SERVICE  RELATED      #        
#                                    #
######################################


gateway:
  replicaCount: 1
  image:
    name: gateway
    tag: latest
    pullPolicy: Always
    ports:
      - containerPort: 9999 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: gateway
  service:
    name: gateway
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 9999
        port: 9999
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30
######################################
#                                    #
#       SHOES SERVICE  RELATED       #        
#                                    #
######################################

shoes:
  replicaCount: 1
  image:
    name: shoes
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1002 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: shoes
  service:
    name: shoes
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1002
        port: 1002
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30
######################################
#                                    #
#       WISHLIST SERVICE  RELATED    #        
#                                    #
######################################

wishlist:
  replicaCount: 1
  image:
    name: wishlist
    tag: 1
    pullPolicy: Always
    ports:
      - containerPort: 1003 
  resources:
    limits:
      memory: "500Mi"
      cpu: "500m"
  labels:
    app: wishlist
  service:
    name: wishlist
    type: ClusterIP
    ports:
      - protocol: TCP
        targetPort: 1003
        port: 1003
  autoscalar:
    isEnabled: true
    minReplicas: 1
    maxReplicas: 10
    averageCPUUtilization: 30
    averageMemoryUtilization: 30

######################################
#                                    #
#       INGRESS SERVICE  RELATED     #        
#                                    #
######################################

ingress:
  name: api-ingress
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  rules:
    - http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: frontend-service
              port:
                number: 8080